#pragma once

#include "MCTargetDesc/LEGMCTargetDesc.h"
#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class LEGInstPrinter : public MCInstPrinter {
public:
	LEGInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII, const MCRegisterInfo &MRI)
		: MCInstPrinter(MAI, MII, MRI) {}


	void printInst(const MCInst *MI, uint64_t Address, StringRef Annot, const MCSubtargetInfo &STI, raw_ostream &O) override;

	// Autogenerated by tbldegn
	static const char *getRegisterName(MCRegister Reg, unsigned AltIdx = LEG::NoRegAltName);
private:
	void printOperand(const MCInst *MI, unsigned OpNo, const MCSubtargetInfo &STI, raw_ostream &O, const char *Modifier = nullptr) const;

	// custom Operands
	void printAddrModeRegImm(const MCInst *MI, unsigned OpNo, const MCSubtargetInfo &STI, raw_ostream &O) const;
	void printBranchOperand(const MCInst *MI, uint64_t Address, unsigned OpNo, const MCSubtargetInfo &STI, raw_ostream &O) const;

	// Autogenerated by tblgen
	std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
	void printInstruction(const MCInst *MI, uint64_t Address, const MCSubtargetInfo &STI, raw_ostream &O);
	//bool printAliasInstr(const MCInst *MI, uint64_t Address, const MCSubtargetInfo &STI, raw_ostream &O);
	void printCustomAliasOperand(const MCInst *MI, uint64_t Address, unsigned OpIdx, unsigned PrintMethodIdx, const MCSubtargetInfo &STI, raw_ostream &O);
};

}